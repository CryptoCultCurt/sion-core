{
  "address": "0x11070153026F3Fefb9D752c0f3d03eEfcf3Da21F",
  "abi": [
    {
      "inputs": [],
      "name": "MAX_UINT_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "K1",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "K2",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "collateralAsset",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "borrowToken",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "poolToken",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "poolWbtc",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "freeWbtc",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "freeToken",
                  "type": "int256"
                }
              ],
              "internalType": "struct Liquidity",
              "name": "liq",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "tokenAssetSlippagePercent",
              "type": "uint256"
            }
          ],
          "internalType": "struct CalcContext2",
          "name": "ctx2",
          "type": "tuple"
        }
      ],
      "name": "liquidityToActions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum ActionType",
              "name": "actionType",
              "type": "ActionType"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slippagePercent",
              "type": "uint256"
            }
          ],
          "internalType": "struct Action[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x693827f350ba1e17664e8c4c82b0d156b4e5976d03475482bcabb68b14ef6afd",
  "receipt": {
    "to": null,
    "from": "0x5CB01385d3097b6a189d1ac8BA3364D900666445",
    "contractAddress": "0x11070153026F3Fefb9D752c0f3d03eEfcf3Da21F",
    "transactionIndex": 0,
    "gasUsed": "1750262",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x583b520bdb7251f36989b255a2a32b02008a78371f02259e8bf56de54f843c0f",
    "transactionHash": "0x693827f350ba1e17664e8c4c82b0d156b4e5976d03475482bcabb68b14ef6afd",
    "logs": [],
    "blockNumber": 25027569,
    "cumulativeGasUsed": "1750262",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3c06fdcdf9fca8d42569cd7a26a59052",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MAX_UINT_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"K1\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"K2\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"collateralAsset\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"borrowToken\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"poolToken\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"poolWbtc\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"freeWbtc\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"freeToken\",\"type\":\"int256\"}],\"internalType\":\"struct Liquidity\",\"name\":\"liq\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenAssetSlippagePercent\",\"type\":\"uint256\"}],\"internalType\":\"struct CalcContext2\",\"name\":\"ctx2\",\"type\":\"tuple\"}],\"name\":\"liquidityToActions\",\"outputs\":[{\"components\":[{\"internalType\":\"enum ActionType\",\"name\":\"actionType\",\"type\":\"ActionType\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippagePercent\",\"type\":\"uint256\"}],\"internalType\":\"struct Action[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/EtsCalculationLibrary2.sol\":\"EtsCalculationLibrary2\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/EtsCalculationLibrary2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\nimport \\\"hardhat/console.sol\\\";\\n\\nenum ActionType {\\n    ADD_LIQUIDITY, // D2, D6 < 0\\n    REMOVE_LIQUIDITY, // D2, D6 > 0\\n\\n    SUPPLY_ASSET_TO_AAVE, // D4 > 0\\n    WITHDRAW_ASSET_FROM_AAVE, // D4 < 0\\n\\n    BORROW_TOKEN_FROM_AAVE, // D5 > 0\\n    REPAY_TOKEN_TO_AAVE, // D5 < 0\\n\\n    SWAP_TOKEN_TO_ASSET, // D3 < 0\\n    SWAP_ASSET_TO_TOKEN  // D3 > 0\\n}\\n\\n\\nenum Method {\\n    NOTHING,\\n    STAKE,\\n    UNSTAKE\\n}\\n\\n// Amounts in decimals specific token, all positive\\nstruct Amounts {\\n    uint256 collateralAsset;\\n    uint256 borrowToken;\\n    uint256 poolToken;\\n    uint256 poolWbtc;\\n    uint256 freeWbtc;\\n    uint256 freeToken;\\n}\\n\\n// liquidity in USD e6, all positive\\nstruct Liquidity {\\n    int256 collateralAsset;\\n    int256 borrowToken;\\n    int256 poolToken;\\n    int256 poolWbtc;\\n    int256 freeWbtc;\\n    int256 freeToken;\\n}\\n\\n// liquidity deltas in USD e6, may contain zeroes and below zero\\nstruct Deltas {\\n    // int256 d1;\\n    int256 d2;\\n    int256 d3;\\n    int256 d4;\\n    int256 d5;\\n    int256 d6;\\n    uint256 code;\\n}\\n\\nstruct Action {\\n    ActionType actionType;\\n    uint256 amount;\\n    uint256 slippagePercent;\\n}\\n\\nstruct Action2 {\\n    uint256 actionType;\\n    uint256 amount;\\n    uint256 slippagePercent;\\n}\\n\\nstruct CalcContext {\\n    int256 K1; // in e18\\n    int256 K2; // in e18\\n    int256 amount; // amount in USD, below zero if UNSTAKE\\n    Liquidity liq; // in USD e6\\n    uint256 tokenAssetSlippagePercent;\\n    Deltas deltas; // in USD e6\\n}\\n\\nstruct CalcContext2 {\\n    int256 K1; // in e18\\n    int256 K2; // in e18\\n    int256 amount; // amount in USD, below zero if UNSTAKE\\n    Liquidity liq; // in USD e6\\n    uint256 tokenAssetSlippagePercent;\\n}\\n\\n\\nlibrary EtsCalculationLibrary2{\\n\\n    uint256 public constant MAX_UINT_VALUE = type(uint256).max;\\n\\n    // /**\\n    //   * d1 = -d2 - Lam - LFu;\\n    //   */\\n    // function calcD1(CalcContext memory ctx) internal pure {\\n    //     ctx.deltas.d1 = - ctx.deltas.d2 - ctx.amount - ctx.liq.freeWbtc;\\n    // }\\n\\n    /**\\n      * d2 = d6 * K2;\\n      */\\n    function calcD2(CalcContext memory ctx) internal pure {\\n        ctx.deltas.d2 = ctx.deltas.d6 * ctx.K2 / 1e18;\\n    }\\n\\n    /**\\n      * d3 = -LFw - d5 - d6;\\n      */\\n    function calcD3(CalcContext memory ctx) internal pure {\\n        ctx.deltas.d3 = - ctx.liq.freeToken - ctx.deltas.d5 - ctx.deltas.d6;\\n    }\\n\\n    /**\\n      * d4 = K1 * (LBw + d5) - LCu;\\n      */\\n    function calcD4(CalcContext memory ctx) internal pure {\\n        ctx.deltas.d4 = (ctx.liq.borrowToken + ctx.deltas.d5) * ctx.K1 / 1e18 - ctx.liq.collateralAsset;\\n    }\\n\\n    /**\\n      * d5 = LPw - LBw - d6;\\n      */\\n    function calcD5(CalcContext memory ctx) internal pure {\\n        ctx.deltas.d5 = ctx.liq.poolToken - ctx.liq.borrowToken - ctx.deltas.d6;\\n    }\\n\\n    /**\\n     * d6 = ((K1 - 1) * LPw + LBw - LCu - LFu - LFuc - LFw - Lam) / (K1 + K2);\\n     */\\n    function calcD6(CalcContext memory ctx) internal view {\\n\\n        logSign(\\\"K1:\\\", ctx.K1);\\n        logSign(\\\"K2:\\\", ctx.K2);\\n\\n\\n        int256 a = (ctx.K1 - 1e18) * ctx.liq.poolToken / 1e18;\\n        logSign(\\\"a:\\\", a);\\n        a = a + ctx.liq.borrowToken;\\n        logSign(\\\"a:\\\", a);\\n        a = a - ctx.liq.collateralAsset;\\n        logSign(\\\"a:\\\", a);\\n        a = a - ctx.liq.freeWbtc;\\n        logSign(\\\"a:\\\", a);\\n        a = a - ctx.liq.freeToken;\\n        logSign(\\\"a:\\\", a);\\n        a = a - ctx.amount;\\n        logSign(\\\"a:\\\", a);\\n\\n        int256 b = ctx.K1 + ctx.K2;\\n        logSign(\\\"b:\\\", b);\\n        int256 d6 = 1e18 * a / b;\\n\\n        ctx.deltas.d6 = d6;\\n    }\\n\\n    function logSign(string memory msg, int256 value) internal view {\\n        if (value < 0) {\\n            console.log(msg, \\\"-\\\", toUint256(- value));\\n        } else {\\n            console.log(msg, toUint256(value));\\n        }\\n    }\\n\\n    function abs(int256 value) internal pure returns (uint256){\\n        if (value < 0) {\\n            return toUint256(- value);\\n        } else {\\n            return toUint256(value);\\n        }\\n    }\\n\\n    function toUint256(int256 value) internal pure returns (uint256) {\\n        require(value >= 0, \\\"SafeCast: value must be positive\\\");\\n        return uint256(value);\\n    }\\n\\n    function toInt256(uint256 value) internal pure returns (int256) {\\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\\n        require(value <= uint256(type(int256).max), \\\"SafeCast: value doesn't fit in an int256\\\");\\n        return int256(value);\\n    }\\n\\n\\n    /**\\n      * NAV = sum of all tokens liquidity minus borrows.\\n      * @return NAV in USD\\n      */\\n    function _netAssetValue(Liquidity memory liq) internal pure returns (int256){\\n\\n        // add liquidity in free tokens\\n        int256 navUsd = liq.freeWbtc + liq.freeToken;\\n        // add liquidity in pool\\n        navUsd = navUsd + liq.poolToken + liq.poolWbtc;\\n        // add liquidity in aave collateral minus borrow\\n        navUsd = navUsd + liq.collateralAsset - liq.borrowToken;\\n\\n        return navUsd;\\n    }\\n\\n    function test() public view returns (uint256) {\\n        return 0;\\n    }\\n\\n\\n    function liquidityToActions(CalcContext2 memory ctx2) public view returns (Action[] memory, uint256) {\\n\\n        Deltas memory deltas = Deltas(0, 0, 0, 0, 0, 0);\\n        CalcContext memory ctx = CalcContext(ctx2.K1, ctx2.K2, ctx2.amount, ctx2.liq, ctx2.tokenAssetSlippagePercent, deltas);\\n\\n        //if it is unstake then increase unstake amount to awoid slippages on swap\\n        if (ctx.amount < 0) {\\n            //if decrease on tokenAssetSlippagePercent then newAmount became oldAmount\\n            ctx.amount = ctx.amount * 10000 / (10000 - toInt256(ctx.tokenAssetSlippagePercent));\\n        }\\n\\n        // order specified, don't change\\n        calcD6(ctx);\\n        calcD2(ctx);\\n        //calcD1(ctx);\\n        calcD5(ctx);\\n        calcD4(ctx);\\n        calcD3(ctx);\\n        ctx.deltas.code = 2 * (ctx.deltas.d2 >= 0 ? 1 : 0) + 4 * (ctx.deltas.d3 >= 0 ? 1 : 0) + 8 * (ctx.deltas.d4 >= 0 ? 1 : 0) + 16 * (ctx.deltas.d5 >= 0 ? 1 : 0);\\n\\n\\n        console.log(\\\"-------- Deltas\\\");\\n        //logSign(\\\"d1:\\\", ctx.deltas.d1);\\n        logSign(\\\"d2:\\\", ctx.deltas.d2);\\n        logSign(\\\"d3:\\\", ctx.deltas.d3);\\n        logSign(\\\"d4:\\\", ctx.deltas.d4);\\n        logSign(\\\"d5:\\\", ctx.deltas.d5);\\n        logSign(\\\"d6:\\\", ctx.deltas.d6);\\n        console.log(\\\"code:\\\", ctx.deltas.code);\\n        console.log(\\\"--------\\\");\\n\\n\\n        Action[] memory actions = new Action[](6);\\n        uint index;\\n\\n        deltas = ctx.deltas;\\n\\n\\n        // if (deltas.d1 < 0 && deltas.d3 < 0 && deltas.d4 < 0\\n        // ) {\\n        //     revert(\\\"D1-D3-D4 have same sign\\\");\\n        // }\\n\\n        if (deltas.d3 > 0 && deltas.d5 > 0 && deltas.d6 > 0\\n        ) {\\n            revert(\\\"D3-D5-D6 have same sign\\\");\\n        }\\n\\n        if (deltas.d3 >= 0 && deltas.d4 < 0 && deltas.d5 < 0) {\\n            // first circle cases (4 cases)\\n            actions[index++] = Action(ActionType.REMOVE_LIQUIDITY, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.REPAY_TOKEN_TO_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.WITHDRAW_ASSET_FROM_AAVE, abs(deltas.d4), 0);\\n            actions[index++] = Action(ActionType.SWAP_ASSET_TO_TOKEN, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.ADD_LIQUIDITY, (ctx2.amount < 0) ? uint(-ctx2.amount) : MAX_UINT_VALUE, 0);\\n        } else if (deltas.d3 < 0 && deltas.d4 >= 0 && deltas.d5 >= 0) {\\n            // second circle cases (4 cases)\\n            actions[index++] = Action(ActionType.REMOVE_LIQUIDITY, abs(deltas.d3), 0);\\n            actions[index++] = Action(ActionType.SWAP_TOKEN_TO_ASSET, MAX_UINT_VALUE, ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.SUPPLY_ASSET_TO_AAVE, MAX_UINT_VALUE, 0);\\n            actions[index++] = Action(ActionType.BORROW_TOKEN_FROM_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.ADD_LIQUIDITY, (ctx2.amount < 0) ? uint(-ctx2.amount) : MAX_UINT_VALUE, 0);\\n        } else if (deltas.d2 >= 0 && deltas.d3 < 0) {\\n            // unstake without circle (3 cases: 00011,01011,10011)\\n            actions[index++] = Action(ActionType.REMOVE_LIQUIDITY, abs(deltas.d6), 0);\\n            actions[index++] = Action((deltas.d5 < 0) ? ActionType.REPAY_TOKEN_TO_AAVE : ActionType.BORROW_TOKEN_FROM_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.SWAP_TOKEN_TO_ASSET, MAX_UINT_VALUE, ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action((deltas.d4 < 0) ? ActionType.WITHDRAW_ASSET_FROM_AAVE : ActionType.SUPPLY_ASSET_TO_AAVE, abs(deltas.d4), 0);\\n        } else if (deltas.d2 < 0 && deltas.d3 >= 0) {\\n            // stake without circle (3 cases: 01100,10100,11100)\\n            actions[index++] = Action((deltas.d4 < 0) ? ActionType.WITHDRAW_ASSET_FROM_AAVE : ActionType.SUPPLY_ASSET_TO_AAVE, abs(deltas.d4), 0);\\n            actions[index++] = Action(ActionType.SWAP_ASSET_TO_TOKEN, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action((deltas.d5 < 0) ? ActionType.REPAY_TOKEN_TO_AAVE : ActionType.BORROW_TOKEN_FROM_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.ADD_LIQUIDITY, MAX_UINT_VALUE, 0);\\n        } else if (deltas.d2 >= 0 && deltas.d4 >= 0 && deltas.d5 < 0) {\\n            // balance without circle (2 cases: 01010,01110)\\n            actions[index++] = Action(ActionType.REMOVE_LIQUIDITY, abs(deltas.d6), 0);\\n            actions[index++] = Action((deltas.d3 < 0) ? ActionType.SWAP_TOKEN_TO_ASSET : ActionType.SWAP_ASSET_TO_TOKEN, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.SUPPLY_ASSET_TO_AAVE, MAX_UINT_VALUE, 0);\\n            actions[index++] = Action(ActionType.REPAY_TOKEN_TO_AAVE, MAX_UINT_VALUE, 0);\\n        } else if (deltas.d2 < 0 && deltas.d4 < 0 && deltas.d5 >= 0) {\\n            // balance without circle (2 cases: 10001,10101)\\n            actions[index++] = Action(ActionType.WITHDRAW_ASSET_FROM_AAVE, abs(deltas.d4), 0);\\n            actions[index++] = Action(ActionType.BORROW_TOKEN_FROM_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action((deltas.d3 < 0) ? ActionType.SWAP_TOKEN_TO_ASSET : ActionType.SWAP_ASSET_TO_TOKEN, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.ADD_LIQUIDITY, (ctx2.amount < 0) ? uint(-ctx2.amount) : MAX_UINT_VALUE, 0);\\n        } else if (deltas.d2 < 0 && deltas.d3 >= 0 && deltas.d4 >= 0 && deltas.d5 >= 0) {\\n            // D1-D3-D4 have same sign case (11101)\\n            actions[index++] = Action(ActionType.SUPPLY_ASSET_TO_AAVE, abs(deltas.d4), 0);\\n            actions[index++] = Action(ActionType.BORROW_TOKEN_FROM_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.SWAP_ASSET_TO_TOKEN, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.ADD_LIQUIDITY, MAX_UINT_VALUE, 0);\\n        } else if (deltas.d2 >= 0 && deltas.d3 >= 0 && deltas.d4 >= 0 && deltas.d5 < 0) {\\n            // D1-D3-D4 have same sign case (01111)\\n            actions[index++] = Action(ActionType.SUPPLY_ASSET_TO_AAVE, abs(deltas.d4), 0);\\n            actions[index++] = Action(ActionType.SWAP_ASSET_TO_TOKEN, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.REMOVE_LIQUIDITY, abs(deltas.d6), 0);\\n            actions[index++] = Action(ActionType.REPAY_TOKEN_TO_AAVE, abs(deltas.d5), 0);\\n        } else if (deltas.d2 < 0 && deltas.d3 >= 0 && deltas.d4 >= 0 && deltas.d5 < 0) {\\n            // D1-D3-D4 have same sign case (01101)\\n            actions[index++] = Action(ActionType.SUPPLY_ASSET_TO_AAVE, abs(deltas.d4), 0);\\n            actions[index++] = Action(ActionType.SWAP_ASSET_TO_TOKEN, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.REPAY_TOKEN_TO_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.ADD_LIQUIDITY, MAX_UINT_VALUE, 0);\\n        } else if (deltas.d2 < 0 && deltas.d3 < 0 && deltas.d4 < 0 && deltas.d5 < 0) {\\n            // D3-D5-D6 have same sign case (00001)\\n            actions[index++] = Action(ActionType.REPAY_TOKEN_TO_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.SWAP_TOKEN_TO_ASSET, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.WITHDRAW_ASSET_FROM_AAVE, abs(deltas.d4), 0);\\n            actions[index++] = Action(ActionType.ADD_LIQUIDITY, MAX_UINT_VALUE, 0);\\n        } else if (deltas.d2 < 0 && deltas.d3 < 0 && deltas.d4 >= 0 && deltas.d5 < 0) {\\n            // D3-D5-D6 have same sign case (01001)\\n            actions[index++] = Action(ActionType.REPAY_TOKEN_TO_AAVE, abs(deltas.d5), 0);\\n            actions[index++] = Action(ActionType.SWAP_TOKEN_TO_ASSET, abs(deltas.d3), ctx.tokenAssetSlippagePercent);\\n            actions[index++] = Action(ActionType.SUPPLY_ASSET_TO_AAVE, abs(deltas.d4), 0);\\n            actions[index++] = Action(ActionType.ADD_LIQUIDITY, MAX_UINT_VALUE, 0);\\n        } else {\\n            revert(\\\"non-existent case\\\");\\n        }\\n\\n        // reassemble array\\n        Action[] memory tmp = new Action[](index);\\n        for (uint j; j < index; j++) {\\n            tmp[j] = actions[j];\\n        }\\n        actions = tmp;\\n\\n        console.log(\\\"--------- actions\\\");\\n        for (uint j; j < actions.length; j++) {\\n            console.log(j, uint(actions[j].actionType), actions[j].amount);\\n        }\\n        console.log(\\\"---------\\\");\\n        return (actions, ctx.deltas.code);\\n    }\\n\\n}\\n\\n\\n\",\"keccak256\":\"0xd87a277ac96bf36704949561d5ee09f2f552e786080669fda41febb871888fd9\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x611eb261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063437559f914610050578063f8a8fd6d1461007a578063fb24974a1461008b575b600080fd5b61006361005e366004611a12565b610094565b604051610071929190611b05565b60405180910390f35b60005b604051908152602001610071565b61007d60001981565b60606000806040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815250905060006040518060c00160405280866000015181526020018660200151815260200186604001518152602001866060015181526020018660800151815260200183815250905060008160400151121561015a5761012d8160800151611452565b61013990612710611dad565b604082015161014a90612710611cff565b6101549190611cc3565b60408201525b610163816114c0565b61016c816116f8565b6101758161172c565b61017e81611765565b610187816117c2565b60008160a0015160600151121561019f5760006101a2565b60015b6101ad906010611d84565b60008260a001516040015112156101c55760006101c8565b60015b6101d3906008611d84565b60008360a001516020015112156101eb5760006101ee565b60015b6101f9906004611d84565b60a0840151516000131561020e576000610211565b60015b61021c906002611d84565b6102269190611c9e565b6102309190611c9e565b61023a9190611c9e565b60ff168160a0015160a001818152505061027a6040518060400160405280600f81526020016e2d2d2d2d2d2d2d2d2044656c74617360881b815250611806565b6102a76040518060400160405280600381526020016232191d60e91b8152508260a001516000015161184c565b6102d46040518060400160405280600381526020016232199d60e91b8152508260a001516020015161184c565b61030160405180604001604052806003815260200162321a1d60e91b8152508260a001516040015161184c565b61032e60405180604001604052806003815260200162321a9d60e91b8152508260a001516060015161184c565b61035b60405180604001604052806003815260200162321b1d60e91b8152508260a001516080015161184c565b61038a6040518060400160405280600581526020016431b7b2329d60d91b8152508260a0015160a0015161189b565b6103b3604051806040016040528060088152602001672d2d2d2d2d2d2d2d60c01b815250611806565b60408051600680825260e08201909252600091816020015b6103f06040805160608101909152806000815260200160008152602001600081525090565b8152602001906001900390816103cb57905050905060008260a00151935060008460200151138015610426575060008460600151135b8015610436575060008460800151135b156104885760405162461bcd60e51b815260206004820152601760248201527f44332d44352d443620686176652073616d65207369676e00000000000000000060448201526064015b60405180910390fd5b60008460200151121580156104a1575060008460400151125b80156104b1575060008460600151125b1561066e57604080516060810190915280600181526020016104d686606001516118e0565b8152600060209091015282826104eb81611dec565b9350815181106104fd576104fd611e50565b60209081029190910101526040805160608101909152806005815260200161052886606001516118e0565b81526000602090910152828261053d81611dec565b93508151811061054f5761054f611e50565b60209081029190910101526040805160608101909152806003815260200161057a86604001516118e0565b81526000602090910152828261058f81611dec565b9350815181106105a1576105a1611e50565b602090810291909101015260408051606081019091528060075b81526020016105cd86602001516118e0565b8152608085015160209091015282826105e581611dec565b9350815181106105f7576105f7611e50565b602090810291909101015260408051606081019091528060008152602001600089604001511261062957600019610637565b886040015161063790611e07565b81526000602090910152828261064c81611dec565b93508151811061065e5761065e611e50565b602002602001018190525061129c565b6000846020015112801561068757506000846040015112155b801561069857506000846060015112155b156107b757604080516060810190915280600181526020016106bd86602001516118e0565b8152600060209091015282826106d281611dec565b9350815181106106e4576106e4611e50565b60209081029190910101526040805160608101909152806006815260001960208201526080850151604090910152828261071d81611dec565b93508151811061072f5761072f611e50565b60209081029190910101526040805160608101909152806002815260001960208201526000604090910152828261076581611dec565b93508151811061077757610777611e50565b6020908102919091010152604080516060810190915280600481526020016107a286606001516118e0565b8152600060209091015282826105e581611dec565b83516000138015906107cd575060008460200151125b1561092957604080516060810190915280600181526020016107f286608001516118e0565b81526000602090910152828261080781611dec565b93508151811061081957610819611e50565b602002602001018190525060405180606001604052806000866060015112610842576004610845565b60055b600781111561085657610856611e3a565b815260200161086886606001516118e0565b81526000602090910152828261087d81611dec565b93508151811061088f5761088f611e50565b6020908102919091010152604080516060810190915280600681526000196020820152608085015160409091015282826108c881611dec565b9350815181106108da576108da611e50565b602002602001018190525060405180606001604052806000866040015112610903576002610906565b60035b600781111561091757610917611e3a565b815260200161063786604001516118e0565b8351600013801561093f57506000846020015112155b15610ab15760405180606001604052806000866040015112610962576002610965565b60035b600781111561097657610976611e3a565b815260200161098886604001516118e0565b81526000602090910152828261099d81611dec565b9350815181106109af576109af611e50565b6020908102919091010152604080516060810190915280600781526020016109da86602001516118e0565b8152608085015160209091015282826109f281611dec565b935081518110610a0457610a04611e50565b602002602001018190525060405180606001604052806000866060015112610a2d576004610a30565b60055b6007811115610a4157610a41611e3a565b8152602001610a5386606001516118e0565b815260006020909101528282610a6881611dec565b935081518110610a7a57610a7a611e50565b602090810291909101015260408051606081019091528060005b815260001960208201526000604090910152828261064c81611dec565b8351600013801590610ac857506000846040015112155b8015610ad8575060008460600151125b15610c035760408051606081019091528060018152602001610afd86608001516118e0565b815260006020909101528282610b1281611dec565b935081518110610b2457610b24611e50565b602002602001018190525060405180606001604052806000866020015112610b4d576007610b50565b60065b6007811115610b6157610b61611e3a565b8152602001610b7386602001516118e0565b815260808501516020909101528282610b8b81611dec565b935081518110610b9d57610b9d611e50565b602090810291909101015260408051606081019091528060028152600019602082015260006040909101528282610bd381611dec565b935081518110610be557610be5611e50565b60209081029190910101526040805160608101909152806005610a94565b83516000138015610c18575060008460400151125b8015610c2957506000846060015112155b15610d045760408051606081019091528060038152602001610c4e86604001516118e0565b815260006020909101528282610c6381611dec565b935081518110610c7557610c75611e50565b602090810291909101015260408051606081019091528060048152602001610ca086606001516118e0565b815260006020909101528282610cb581611dec565b935081518110610cc757610cc7611e50565b602002602001018190525060405180606001604052806000866020015112610cf0576007610cf3565b60065b60078111156105bb576105bb611e3a565b83516000138015610d1a57506000846020015112155b8015610d2b57506000846040015112155b8015610d3c57506000846060015112155b15610e1d5760408051606081019091528060028152602001610d6186604001516118e0565b815260006020909101528282610d7681611dec565b935081518110610d8857610d88611e50565b602090810291909101015260408051606081019091528060048152602001610db386606001516118e0565b815260006020909101528282610dc881611dec565b935081518110610dda57610dda611e50565b602090810291909101015260408051606081019091528060078152602001610e0586602001516118e0565b815260808501516020909101528282610a6881611dec565b8351600013801590610e3457506000846020015112155b8015610e4557506000846040015112155b8015610e55575060008460600151125b15610f735760408051606081019091528060028152602001610e7a86604001516118e0565b815260006020909101528282610e8f81611dec565b935081518110610ea157610ea1611e50565b602090810291909101015260408051606081019091528060078152602001610ecc86602001516118e0565b815260808501516020909101528282610ee481611dec565b935081518110610ef657610ef6611e50565b602090810291909101015260408051606081019091528060018152602001610f2186608001516118e0565b815260006020909101528282610f3681611dec565b935081518110610f4857610f48611e50565b60209081029190910101526040805160608101909152806005815260200161063786606001516118e0565b83516000138015610f8957506000846020015112155b8015610f9a57506000846040015112155b8015610faa575060008460600151125b156110695760408051606081019091528060028152602001610fcf86604001516118e0565b815260006020909101528282610fe481611dec565b935081518110610ff657610ff6611e50565b60209081029190910101526040805160608101909152806007815260200161102186602001516118e0565b81526080850151602090910152828261103981611dec565b93508151811061104b5761104b611e50565b60209081029190910101526040805160608101909152806005610a41565b8351600013801561107e575060008460200151125b801561108e575060008460400151125b801561109e575060008460600151125b1561116b57604080516060810190915280600581526020016110c386606001516118e0565b8152600060209091015282826110d881611dec565b9350815181106110ea576110ea611e50565b60209081029190910101526040805160608101909152806006815260200161111586602001516118e0565b81526080850151602090910152828261112d81611dec565b93508151811061113f5761113f611e50565b602090810291909101015260408051606081019091528060035b8152602001610a5386604001516118e0565b83516000138015611180575060008460200151125b801561119157506000846040015112155b80156111a1575060008460600151125b1561126057604080516060810190915280600581526020016111c686606001516118e0565b8152600060209091015282826111db81611dec565b9350815181106111ed576111ed611e50565b60209081029190910101526040805160608101909152806006815260200161121886602001516118e0565b81526080850151602090910152828261123081611dec565b93508151811061124257611242611e50565b60209081029190910101526040805160608101909152806002611159565b60405162461bcd60e51b81526020600482015260116024820152706e6f6e2d6578697374656e74206361736560781b604482015260640161047f565b60008167ffffffffffffffff8111156112b7576112b7611e66565b60405190808252806020026020018201604052801561130d57816020015b6112fa6040805160608101909152806000815260200160008152602001600081525090565b8152602001906001900390816112d55790505b50905060005b828110156113655783818151811061132d5761132d611e50565b602002602001015182828151811061134757611347611e50565b6020026020010181905250808061135d90611dec565b915050611313565b5080925061139b604051806040016040528060118152602001702d2d2d2d2d2d2d2d2d20616374696f6e7360781b815250611806565b60005b835181101561140f576113fd818583815181106113bd576113bd611e50565b60200260200101516000015160078111156113da576113da611e3a565b8684815181106113ec576113ec611e50565b602002602001015160200151611905565b8061140781611dec565b91505061139e565b5061143a604051806040016040528060098152602001682d2d2d2d2d2d2d2d2d60b81b815250611806565b828460a0015160a00151965096505050505050915091565b60006001600160ff1b038211156114bc5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161047f565b5090565b6114e96040518060400160405280600381526020016225989d60e91b815250826000015161184c565b6115126040518060400160405280600381526020016225991d60e91b815250826020015161184c565b6000670de0b6b3a7640000826060015160400151670de0b6b3a7640000846000015161153e9190611dad565b6115489190611cff565b6115529190611cc3565b905061157860405180604001604052806002815260200161309d60f11b8152508261184c565b60608201516020015161158b9082611c5d565b90506115b160405180604001604052806002815260200161309d60f11b8152508261184c565b6060820151516115c19082611dad565b90506115e760405180604001604052806002815260200161309d60f11b8152508261184c565b6060820151608001516115fa9082611dad565b905061162060405180604001604052806002815260200161309d60f11b8152508261184c565b606082015160a001516116339082611dad565b905061165960405180604001604052806002815260200161309d60f11b8152508261184c565b60408201516116689082611dad565b905061168e60405180604001604052806002815260200161309d60f11b8152508261184c565b602082015182516000916116a191611c5d565b90506116c760405180604001604052806002815260200161311d60f11b8152508261184c565b6000816116dc84670de0b6b3a7640000611cff565b6116e69190611cc3565b60a09094015160800193909352505050565b670de0b6b3a764000081602001518260a00151608001516117199190611cff565b6117239190611cc3565b60a09091015152565b60a0810151608001516060820151602081015160409091015161174f9190611dad565b6117599190611dad565b60a09091015160600152565b806060015160000151670de0b6b3a764000082600001518360a00151606001518460600151602001516117989190611c5d565b6117a29190611cff565b6117ac9190611cc3565b6117b69190611dad565b60a09091015160400152565b8060a00151608001518160a0015160600151826060015160a001516117e690611e07565b6117f09190611dad565b6117fa9190611dad565b60a09091015160200152565b6118498160405160240161181a9190611b83565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611958565b50565b600081121561188e5761188a82604051806040016040528060018152602001602d60f81b8152506118858461188090611e07565b611979565b6119cb565b5050565b61188a8261189b83611979565b61188a82826040516024016118b1929190611bd3565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611958565b6000808212156118fc576118f661188083611e07565b92915050565b6118f682611979565b6040516024810184905260448101839052606481018290526119539060840160408051601f198184030181529190526020810180516001600160e01b03166339e0829d60e21b179052611958565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000808212156114bc5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161047f565b6119538383836040516024016119e393929190611b9d565b60408051601f198184030181529190526020810180516001600160e01b031663f362ca5960e01b179052611958565b6000818303610140811215611a2657600080fd5b611a2e611bf5565b83358152602084013560208201526040840135604082015260c0605f1983011215611a5857600080fd5b611a60611c2c565b9150606084013582526080840135602083015260a0840135604083015260c0840135606083015260e0840135608083015261010084013560a08301528160608201526101208401356080820152809250505092915050565b6000815180845260005b81811015611ade57602081850181015186830182015201611ac2565b81811115611af0576000602083870101525b50601f01601f19169290920160200192915050565b604080825283518282018190526000919060609081850190602080890186805b84811015611b6e578251805160088110611b4d57634e487b7160e01b84526021600452602484fd5b87528085015185880152880151888701529486019491830191600101611b25565b50505095909501959095525092949350505050565b602081526000611b966020830184611ab8565b9392505050565b606081526000611bb06060830186611ab8565b8281036020840152611bc28186611ab8565b915050826040830152949350505050565b604081526000611be66040830185611ab8565b90508260208301529392505050565b60405160a0810167ffffffffffffffff81118282101715611c2657634e487b7160e01b600052604160045260246000fd5b60405290565b60405160c0810167ffffffffffffffff81118282101715611c2657634e487b7160e01b600052604160045260246000fd5b600080821280156001600160ff1b0384900385131615611c7f57611c7f611e24565b600160ff1b8390038412811615611c9857611c98611e24565b50500190565b600060ff821660ff84168060ff03821115611cbb57611cbb611e24565b019392505050565b600082611ce057634e487b7160e01b600052601260045260246000fd5b600160ff1b821460001984141615611cfa57611cfa611e24565b500590565b60006001600160ff1b0381841382841380821686840486111615611d2557611d25611e24565b600160ff1b6000871282811687830589121615611d4457611d44611e24565b60008712925087820587128484161615611d6057611d60611e24565b87850587128184161615611d7657611d76611e24565b505050929093029392505050565b600060ff821660ff84168160ff0481118215151615611da557611da5611e24565b029392505050565b60008083128015600160ff1b850184121615611dcb57611dcb611e24565b6001600160ff1b0384018313811615611de657611de6611e24565b50500390565b6000600019821415611e0057611e00611e24565b5060010190565b6000600160ff1b821415611e1d57611e1d611e24565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122081c76f74f404a1a8c785de2272c91ecb9717041f4cad4997e014563835b296a864736f6c63430008060033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063437559f914610050578063f8a8fd6d1461007a578063fb24974a1461008b575b600080fd5b61006361005e366004611a12565b610094565b604051610071929190611b05565b60405180910390f35b60005b604051908152602001610071565b61007d60001981565b60606000806040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815250905060006040518060c00160405280866000015181526020018660200151815260200186604001518152602001866060015181526020018660800151815260200183815250905060008160400151121561015a5761012d8160800151611452565b61013990612710611dad565b604082015161014a90612710611cff565b6101549190611cc3565b60408201525b610163816114c0565b61016c816116f8565b6101758161172c565b61017e81611765565b610187816117c2565b60008160a0015160600151121561019f5760006101a2565b60015b6101ad906010611d84565b60008260a001516040015112156101c55760006101c8565b60015b6101d3906008611d84565b60008360a001516020015112156101eb5760006101ee565b60015b6101f9906004611d84565b60a0840151516000131561020e576000610211565b60015b61021c906002611d84565b6102269190611c9e565b6102309190611c9e565b61023a9190611c9e565b60ff168160a0015160a001818152505061027a6040518060400160405280600f81526020016e2d2d2d2d2d2d2d2d2044656c74617360881b815250611806565b6102a76040518060400160405280600381526020016232191d60e91b8152508260a001516000015161184c565b6102d46040518060400160405280600381526020016232199d60e91b8152508260a001516020015161184c565b61030160405180604001604052806003815260200162321a1d60e91b8152508260a001516040015161184c565b61032e60405180604001604052806003815260200162321a9d60e91b8152508260a001516060015161184c565b61035b60405180604001604052806003815260200162321b1d60e91b8152508260a001516080015161184c565b61038a6040518060400160405280600581526020016431b7b2329d60d91b8152508260a0015160a0015161189b565b6103b3604051806040016040528060088152602001672d2d2d2d2d2d2d2d60c01b815250611806565b60408051600680825260e08201909252600091816020015b6103f06040805160608101909152806000815260200160008152602001600081525090565b8152602001906001900390816103cb57905050905060008260a00151935060008460200151138015610426575060008460600151135b8015610436575060008460800151135b156104885760405162461bcd60e51b815260206004820152601760248201527f44332d44352d443620686176652073616d65207369676e00000000000000000060448201526064015b60405180910390fd5b60008460200151121580156104a1575060008460400151125b80156104b1575060008460600151125b1561066e57604080516060810190915280600181526020016104d686606001516118e0565b8152600060209091015282826104eb81611dec565b9350815181106104fd576104fd611e50565b60209081029190910101526040805160608101909152806005815260200161052886606001516118e0565b81526000602090910152828261053d81611dec565b93508151811061054f5761054f611e50565b60209081029190910101526040805160608101909152806003815260200161057a86604001516118e0565b81526000602090910152828261058f81611dec565b9350815181106105a1576105a1611e50565b602090810291909101015260408051606081019091528060075b81526020016105cd86602001516118e0565b8152608085015160209091015282826105e581611dec565b9350815181106105f7576105f7611e50565b602090810291909101015260408051606081019091528060008152602001600089604001511261062957600019610637565b886040015161063790611e07565b81526000602090910152828261064c81611dec565b93508151811061065e5761065e611e50565b602002602001018190525061129c565b6000846020015112801561068757506000846040015112155b801561069857506000846060015112155b156107b757604080516060810190915280600181526020016106bd86602001516118e0565b8152600060209091015282826106d281611dec565b9350815181106106e4576106e4611e50565b60209081029190910101526040805160608101909152806006815260001960208201526080850151604090910152828261071d81611dec565b93508151811061072f5761072f611e50565b60209081029190910101526040805160608101909152806002815260001960208201526000604090910152828261076581611dec565b93508151811061077757610777611e50565b6020908102919091010152604080516060810190915280600481526020016107a286606001516118e0565b8152600060209091015282826105e581611dec565b83516000138015906107cd575060008460200151125b1561092957604080516060810190915280600181526020016107f286608001516118e0565b81526000602090910152828261080781611dec565b93508151811061081957610819611e50565b602002602001018190525060405180606001604052806000866060015112610842576004610845565b60055b600781111561085657610856611e3a565b815260200161086886606001516118e0565b81526000602090910152828261087d81611dec565b93508151811061088f5761088f611e50565b6020908102919091010152604080516060810190915280600681526000196020820152608085015160409091015282826108c881611dec565b9350815181106108da576108da611e50565b602002602001018190525060405180606001604052806000866040015112610903576002610906565b60035b600781111561091757610917611e3a565b815260200161063786604001516118e0565b8351600013801561093f57506000846020015112155b15610ab15760405180606001604052806000866040015112610962576002610965565b60035b600781111561097657610976611e3a565b815260200161098886604001516118e0565b81526000602090910152828261099d81611dec565b9350815181106109af576109af611e50565b6020908102919091010152604080516060810190915280600781526020016109da86602001516118e0565b8152608085015160209091015282826109f281611dec565b935081518110610a0457610a04611e50565b602002602001018190525060405180606001604052806000866060015112610a2d576004610a30565b60055b6007811115610a4157610a41611e3a565b8152602001610a5386606001516118e0565b815260006020909101528282610a6881611dec565b935081518110610a7a57610a7a611e50565b602090810291909101015260408051606081019091528060005b815260001960208201526000604090910152828261064c81611dec565b8351600013801590610ac857506000846040015112155b8015610ad8575060008460600151125b15610c035760408051606081019091528060018152602001610afd86608001516118e0565b815260006020909101528282610b1281611dec565b935081518110610b2457610b24611e50565b602002602001018190525060405180606001604052806000866020015112610b4d576007610b50565b60065b6007811115610b6157610b61611e3a565b8152602001610b7386602001516118e0565b815260808501516020909101528282610b8b81611dec565b935081518110610b9d57610b9d611e50565b602090810291909101015260408051606081019091528060028152600019602082015260006040909101528282610bd381611dec565b935081518110610be557610be5611e50565b60209081029190910101526040805160608101909152806005610a94565b83516000138015610c18575060008460400151125b8015610c2957506000846060015112155b15610d045760408051606081019091528060038152602001610c4e86604001516118e0565b815260006020909101528282610c6381611dec565b935081518110610c7557610c75611e50565b602090810291909101015260408051606081019091528060048152602001610ca086606001516118e0565b815260006020909101528282610cb581611dec565b935081518110610cc757610cc7611e50565b602002602001018190525060405180606001604052806000866020015112610cf0576007610cf3565b60065b60078111156105bb576105bb611e3a565b83516000138015610d1a57506000846020015112155b8015610d2b57506000846040015112155b8015610d3c57506000846060015112155b15610e1d5760408051606081019091528060028152602001610d6186604001516118e0565b815260006020909101528282610d7681611dec565b935081518110610d8857610d88611e50565b602090810291909101015260408051606081019091528060048152602001610db386606001516118e0565b815260006020909101528282610dc881611dec565b935081518110610dda57610dda611e50565b602090810291909101015260408051606081019091528060078152602001610e0586602001516118e0565b815260808501516020909101528282610a6881611dec565b8351600013801590610e3457506000846020015112155b8015610e4557506000846040015112155b8015610e55575060008460600151125b15610f735760408051606081019091528060028152602001610e7a86604001516118e0565b815260006020909101528282610e8f81611dec565b935081518110610ea157610ea1611e50565b602090810291909101015260408051606081019091528060078152602001610ecc86602001516118e0565b815260808501516020909101528282610ee481611dec565b935081518110610ef657610ef6611e50565b602090810291909101015260408051606081019091528060018152602001610f2186608001516118e0565b815260006020909101528282610f3681611dec565b935081518110610f4857610f48611e50565b60209081029190910101526040805160608101909152806005815260200161063786606001516118e0565b83516000138015610f8957506000846020015112155b8015610f9a57506000846040015112155b8015610faa575060008460600151125b156110695760408051606081019091528060028152602001610fcf86604001516118e0565b815260006020909101528282610fe481611dec565b935081518110610ff657610ff6611e50565b60209081029190910101526040805160608101909152806007815260200161102186602001516118e0565b81526080850151602090910152828261103981611dec565b93508151811061104b5761104b611e50565b60209081029190910101526040805160608101909152806005610a41565b8351600013801561107e575060008460200151125b801561108e575060008460400151125b801561109e575060008460600151125b1561116b57604080516060810190915280600581526020016110c386606001516118e0565b8152600060209091015282826110d881611dec565b9350815181106110ea576110ea611e50565b60209081029190910101526040805160608101909152806006815260200161111586602001516118e0565b81526080850151602090910152828261112d81611dec565b93508151811061113f5761113f611e50565b602090810291909101015260408051606081019091528060035b8152602001610a5386604001516118e0565b83516000138015611180575060008460200151125b801561119157506000846040015112155b80156111a1575060008460600151125b1561126057604080516060810190915280600581526020016111c686606001516118e0565b8152600060209091015282826111db81611dec565b9350815181106111ed576111ed611e50565b60209081029190910101526040805160608101909152806006815260200161121886602001516118e0565b81526080850151602090910152828261123081611dec565b93508151811061124257611242611e50565b60209081029190910101526040805160608101909152806002611159565b60405162461bcd60e51b81526020600482015260116024820152706e6f6e2d6578697374656e74206361736560781b604482015260640161047f565b60008167ffffffffffffffff8111156112b7576112b7611e66565b60405190808252806020026020018201604052801561130d57816020015b6112fa6040805160608101909152806000815260200160008152602001600081525090565b8152602001906001900390816112d55790505b50905060005b828110156113655783818151811061132d5761132d611e50565b602002602001015182828151811061134757611347611e50565b6020026020010181905250808061135d90611dec565b915050611313565b5080925061139b604051806040016040528060118152602001702d2d2d2d2d2d2d2d2d20616374696f6e7360781b815250611806565b60005b835181101561140f576113fd818583815181106113bd576113bd611e50565b60200260200101516000015160078111156113da576113da611e3a565b8684815181106113ec576113ec611e50565b602002602001015160200151611905565b8061140781611dec565b91505061139e565b5061143a604051806040016040528060098152602001682d2d2d2d2d2d2d2d2d60b81b815250611806565b828460a0015160a00151965096505050505050915091565b60006001600160ff1b038211156114bc5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161047f565b5090565b6114e96040518060400160405280600381526020016225989d60e91b815250826000015161184c565b6115126040518060400160405280600381526020016225991d60e91b815250826020015161184c565b6000670de0b6b3a7640000826060015160400151670de0b6b3a7640000846000015161153e9190611dad565b6115489190611cff565b6115529190611cc3565b905061157860405180604001604052806002815260200161309d60f11b8152508261184c565b60608201516020015161158b9082611c5d565b90506115b160405180604001604052806002815260200161309d60f11b8152508261184c565b6060820151516115c19082611dad565b90506115e760405180604001604052806002815260200161309d60f11b8152508261184c565b6060820151608001516115fa9082611dad565b905061162060405180604001604052806002815260200161309d60f11b8152508261184c565b606082015160a001516116339082611dad565b905061165960405180604001604052806002815260200161309d60f11b8152508261184c565b60408201516116689082611dad565b905061168e60405180604001604052806002815260200161309d60f11b8152508261184c565b602082015182516000916116a191611c5d565b90506116c760405180604001604052806002815260200161311d60f11b8152508261184c565b6000816116dc84670de0b6b3a7640000611cff565b6116e69190611cc3565b60a09094015160800193909352505050565b670de0b6b3a764000081602001518260a00151608001516117199190611cff565b6117239190611cc3565b60a09091015152565b60a0810151608001516060820151602081015160409091015161174f9190611dad565b6117599190611dad565b60a09091015160600152565b806060015160000151670de0b6b3a764000082600001518360a00151606001518460600151602001516117989190611c5d565b6117a29190611cff565b6117ac9190611cc3565b6117b69190611dad565b60a09091015160400152565b8060a00151608001518160a0015160600151826060015160a001516117e690611e07565b6117f09190611dad565b6117fa9190611dad565b60a09091015160200152565b6118498160405160240161181a9190611b83565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611958565b50565b600081121561188e5761188a82604051806040016040528060018152602001602d60f81b8152506118858461188090611e07565b611979565b6119cb565b5050565b61188a8261189b83611979565b61188a82826040516024016118b1929190611bd3565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611958565b6000808212156118fc576118f661188083611e07565b92915050565b6118f682611979565b6040516024810184905260448101839052606481018290526119539060840160408051601f198184030181529190526020810180516001600160e01b03166339e0829d60e21b179052611958565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000808212156114bc5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161047f565b6119538383836040516024016119e393929190611b9d565b60408051601f198184030181529190526020810180516001600160e01b031663f362ca5960e01b179052611958565b6000818303610140811215611a2657600080fd5b611a2e611bf5565b83358152602084013560208201526040840135604082015260c0605f1983011215611a5857600080fd5b611a60611c2c565b9150606084013582526080840135602083015260a0840135604083015260c0840135606083015260e0840135608083015261010084013560a08301528160608201526101208401356080820152809250505092915050565b6000815180845260005b81811015611ade57602081850181015186830182015201611ac2565b81811115611af0576000602083870101525b50601f01601f19169290920160200192915050565b604080825283518282018190526000919060609081850190602080890186805b84811015611b6e578251805160088110611b4d57634e487b7160e01b84526021600452602484fd5b87528085015185880152880151888701529486019491830191600101611b25565b50505095909501959095525092949350505050565b602081526000611b966020830184611ab8565b9392505050565b606081526000611bb06060830186611ab8565b8281036020840152611bc28186611ab8565b915050826040830152949350505050565b604081526000611be66040830185611ab8565b90508260208301529392505050565b60405160a0810167ffffffffffffffff81118282101715611c2657634e487b7160e01b600052604160045260246000fd5b60405290565b60405160c0810167ffffffffffffffff81118282101715611c2657634e487b7160e01b600052604160045260246000fd5b600080821280156001600160ff1b0384900385131615611c7f57611c7f611e24565b600160ff1b8390038412811615611c9857611c98611e24565b50500190565b600060ff821660ff84168060ff03821115611cbb57611cbb611e24565b019392505050565b600082611ce057634e487b7160e01b600052601260045260246000fd5b600160ff1b821460001984141615611cfa57611cfa611e24565b500590565b60006001600160ff1b0381841382841380821686840486111615611d2557611d25611e24565b600160ff1b6000871282811687830589121615611d4457611d44611e24565b60008712925087820587128484161615611d6057611d60611e24565b87850587128184161615611d7657611d76611e24565b505050929093029392505050565b600060ff821660ff84168160ff0481118215151615611da557611da5611e24565b029392505050565b60008083128015600160ff1b850184121615611dcb57611dcb611e24565b6001600160ff1b0384018313811615611de657611de6611e24565b50500390565b6000600019821415611e0057611e00611e24565b5060010190565b6000600160ff1b821415611e1d57611e1d611e24565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122081c76f74f404a1a8c785de2272c91ecb9717041f4cad4997e014563835b296a864736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}